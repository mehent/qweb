# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: MacOs

on:
  push:
    branches: [ master ]
    paths-ignore:
      - '**.md'
  pull_request:
    branches: [ master ]
    paths-ignore:
      - '**.md'

jobs:
  macos_acceptance:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9]
        browser: [chrome, edge]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install RFW 3.2.2
      if: matrix.python-version == '3.9'
      run: |
        python -m pip install robotframework==3.2.2
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements_test.txt
        pip install --upgrade robotframework-screencaplibrary
    - name: Display Python version
      run: |
        python -c "import sys; print(sys.version)"
    - name: Display Robot FW version
      run: |
        python -m pip show robotframework
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Lint with pylint
      run: |
        pylint QWeb
    - name: Test with pytest
      run: |
        pytest -v --junit-xml=unittests.xml --cov=QWeb
    - name: Display screen resolution
      run: |
        python -c "import pyautogui; print(pyautogui.size())"
    - name: Acceptance tests Chrome
      if: matrix.browser == 'chrome'
      run: |
        python -m robot -e jailed -e PROBLEM_IN_MACOS -e RESOLUTION_DEPENDENCY -e FLASK -v BROWSER:Chrome -d output_${{ matrix.browser }}-${{ matrix.python-version }} --name QWeb -b debug.txt --consolecolors ansi -t "Click icons" test/acceptance/icon.robot
    - name: Acceptance tests Safari
      if: matrix.browser == 'safari'
      run: |
        python -m robot -e jailed -e PROBLEM_IN_SAFARI -e PROBLEM_IN_MACOS -e RESOLUTION_DEPENDENCY -e FLASK -v BROWSER:safari -d output_${{ matrix.browser }}-${{ matrix.python-version }} --name QWeb -b debug.txt --consolecolors ansi -t "Click icons" test/acceptance/icon.robot
    - name: Acceptance tests Edge
      if: matrix.browser == 'edge'
      run: |
        python -m robot -e jailed -e PROBLEM_IN_EDGE -e PROBLEM_IN_MACOS -e RESOLUTION_DEPENDENCY -e FLASK -v BROWSER:edge -d output_${{ matrix.browser }}-${{ matrix.python-version }} --name QWeb -b debug.txt --consolecolors ansi -t "Click icons" test/acceptance/icon.robot
    - name: Archive Robot Framework Tests Report
      if: ${{ always() }}
      uses: actions/upload-artifact@v1
      with:
        name: acceptance-tests-report-${{ matrix.browser }}-${{ runner.os }}-${{ matrix.python-version }}
        path: ./output_${{ matrix.browser }}