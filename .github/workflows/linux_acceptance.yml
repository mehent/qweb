# # This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# # For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

# name: Linux

# on:
#   push:
#     branches: [ master ]
#     paths-ignore:
#       - '**.md'
#   pull_request:
#     branches: [ master ]
#     paths-ignore:
#       - '**.md'

# jobs:
#   linux_acceptance:

#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         python-version: [3.7, 3.8, 3.9]
#         browser: [chrome, firefox]

#     steps:
#     - uses: actions/checkout@v2
#     - name: Set up Python ${{ matrix.python-version }}
#       uses: actions/setup-python@v2
#       with:
#         python-version: ${{ matrix.python-version }}
#     - name: Install RFW 3.2.2
#       if: matrix.python-version == '3.7'
#       run: |
#         python -m pip install robotframework==3.2.2
#     - name: Install dependencies
#       run: |
#         sudo apt-get install matchbox scrot
#         python -m pip install --upgrade pip
#         if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#         if [ -f requirements_test.txt ]; then pip install -r requirements_test.txt; fi
#     - name: Display Python version
#       run: |
#         python -c "import sys; print(sys.version)"
#     - name: Display Robot FW version
#       run: |
#         python -m pip show robotframework
#     - name: Lint with flake8
#       run: |
#         # stop the build if there are Python syntax errors or undefined names
#         flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#         # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#         flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#     - name: Lint with pylint
#       run: |
#         pylint QWeb
#     - name: Test with pytest
#       run: |
#         xvfb-run --auto-servernum pytest -v --junit-xml=unittests.xml --cov=QWeb
#     - name: Acceptance tests Chrome
#       if: matrix.browser == 'chrome'
#       run: |
#         export DISPLAY=:88
#         Xvfb $DISPLAY -screen 0 1920x1080x24 & sleep 1
#         matchbox-window-manager -use_titlebar no &
#         python -c "import pyautogui; print(pyautogui.size())"
#         python -m robot --exitonfailure -e jailed -e PROBLEM_IN_LINUX -v BROWSER:Chrome -d output_${{ matrix.browser }} --name QWeb -b debug.txt --consolecolors ansi test/acceptance
#     - name: Acceptance tests Firefox
#       if: matrix.browser == 'firefox'
#       run: |
#         export DISPLAY=:88
#         Xvfb $DISPLAY -screen 0 1920x1080x24 & sleep 1
#         matchbox-window-manager -use_titlebar no &
#         python -c "import pyautogui; print(pyautogui.size())"
#         python -m robot --exitonfailure -e jailed -e PROBLEM_IN_LINUX -e PROBLEM_IN_FIREFOX -v BROWSER:Firefox -d output_${{ matrix.browser }} --name QWeb -b debug.txt --consolecolors ansi test/acceptance
#     - name: Archive Robot Framework Tests Report
#       if: ${{ always() }}
#       uses: actions/upload-artifact@v1
#       with:
#         name: acceptance-tests-report-${{ matrix.browser }}-${{ runner.os }}-${{ matrix.python-version }}
#         path: ./output_${{ matrix.browser }}